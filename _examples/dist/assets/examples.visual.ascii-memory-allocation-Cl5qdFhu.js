import{r as u,j as r,e as q}from"./index-BqTI3VMm.js";const ce=function(){const Y=u.useRef(null),I=u.useRef(0),$=u.useRef(new Map),W=u.useRef([]),P=u.useRef(new Map),V=u.useRef([]),B=u.useRef([]),[w,K]=u.useState(!0),[b,J]=u.useState(1),[E,Q]=u.useState("allocation"),[R,Z]=u.useState("virtual"),[C,z]=u.useState("first_fit"),[M,ee]=u.useState("memory"),[U,te]=u.useState(!0),[S,ae]=u.useState(!0),[H,se]=u.useState(!1),[_,re]=u.useState("generational"),[y,le]=u.useState("normal"),[x,oe]=u.useState(8192),v={memory:{bg:"#000022",heap:"#00AA00",stack:"#00AAFF",code:"#AA00AA",data:"#AAAA00",free:"#444444",kernel:"#FF4444",text:"#FFFFFF"},address_space:{bg:"#001100",heap:"#88FF88",stack:"#88AAFF",code:"#FF88FF",data:"#FFFF88",free:"#666666",kernel:"#FF8888",text:"#FFFFFF"},allocation:{bg:"#110000",heap:"#FF6666",stack:"#66AAFF",code:"#FF66FF",data:"#FFAA66",free:"#888888",kernel:"#AA6666",text:"#FFFFFF"},virtual:{bg:"#000011",heap:"#6666FF",stack:"#66FFFF",code:"#FF6666",data:"#FFFF66",free:"#666666",kernel:"#FF6666",text:"#FFFFFF"},gc:{bg:"#001122",heap:"#00FF88",stack:"#88AAFF",code:"#FF8888",data:"#FFFF88",free:"#555555",kernel:"#FF4444",text:"#FFFFFF"}};return u.useEffect(()=>{const n=new Map,s=[],k=new Map,O=[{name:"kernel",pid:0,memory:512,type:"system"},{name:"chrome",pid:1001,memory:1024,type:"browser"},{name:"vscode",pid:1002,memory:512,type:"editor"},{name:"node",pid:1003,memory:256,type:"runtime"},{name:"postgres",pid:1004,memory:384,type:"database"},{name:"nginx",pid:1005,memory:64,type:"server"},{name:"docker",pid:1006,memory:128,type:"container"},{name:"redis",pid:1007,memory:96,type:"cache"}];let A=1048576;O.forEach((h,F)=>{const g={id:h.name,name:h.name,pid:h.pid,memory_usage:h.memory,virtual_size:h.memory*1.5,resident_size:h.memory*.8,shared_size:h.memory*.1,heap_size:h.memory*.6,stack_size:h.memory*.05,priority:h.type==="system"?0:Math.floor(Math.random()*20),cpu_usage:Math.random()*50,page_faults:Math.floor(Math.random()*1e3),blocks:[],x:10+F%4*20,y:5+Math.floor(F/4)*8,status:"running"};["heap","stack","code","data"].forEach(t=>{let c=0;if(t==="heap"?c=g.heap_size:t==="stack"?c=g.stack_size:t==="code"?c=g.memory_usage*.2:t==="data"&&(c=g.memory_usage*.15),c>0){const l={id:`${g.name}-${t}`,start_address:A,size:c*1024*1024,type:t,owner:g.name,allocated_time:Date.now()-Math.random()*1e4,access_count:Math.floor(Math.random()*1e3),fragmentation:Math.random()*.3,protection:t==="code"?"rx":t==="stack"?"rw":"rwx",virtual:!0,status:"allocated"};s.push(l),g.blocks.push(l),A+=l.size}}),n.set(h.name,g)});const L=5;for(let h=0;h<L;h++){const F=32+Math.random()*128;s.push({id:`free-${h}`,start_address:A,size:F*1024*1024,type:"free",owner:"system",allocated_time:0,access_count:0,fragmentation:0,protection:"read",virtual:!1,status:"free"}),A+=F*1024*1024}const T=4096,X=Math.floor(x*1024*1024/T);for(let h=0;h<Math.min(X,2e3);h++){const F=Array.from(n.values())[h%n.size];k.set(h,{id:`page-${h}`,frame_number:h,virtual_address:h*T,physical_address:(h+Math.floor(Math.random()*100))*T,process_id:F.id,dirty:Math.random()<.3,accessed:Math.random()<.7,present:Math.random()<.9,swapped:Math.random()<.1,age:Math.floor(Math.random()*1e3),reference_bit:Math.random()<.5})}$.current=n,W.current=s,P.current=k},[R,x]),u.useEffect(()=>{const n=Y.current;if(!n)return;const s=n.getContext("2d");if(!s)return;const k=()=>{n.width=n.offsetWidth,n.height=n.offsetHeight},O=()=>{const a=$.current,t=W.current,c=P.current,l=V.current,d=B.current,i=Date.now()/1e3;if(a.forEach(e=>{let o=1;y==="high"?o=1.3+.2*Math.sin(i*.5):y==="low"?o=.7+.1*Math.sin(i*.3):y==="oom"&&(o=1.8+.3*Math.sin(i*2));let m=0;e.name==="chrome"?m=20*Math.sin(i*.4)+10*Math.sin(i*1.2):e.name==="node"?m=15*Math.sin(i*.8)+(Math.random()<.1?-30:5):e.name==="postgres"?m=8*Math.sin(i*.3)+(Math.random()<.05?20:0):m=5*Math.sin(i*.6)+(Math.random()-.5)*10;const p=e.memory_usage+m*o*b;e.memory_usage=q(p,32,x*.3),e.virtual_size=e.memory_usage*(1.2+Math.random()*.5),e.resident_size=e.memory_usage*(.7+Math.random()*.2),e.heap_size=e.memory_usage*(.5+Math.random()*.3),e.stack_size=Math.max(4,e.memory_usage*.05),y==="high"||y==="oom"?e.page_faults+=Math.floor(Math.random()*10):e.page_faults+=Math.floor(Math.random()*2),y==="oom"?e.cpu_usage=Math.min(100,e.cpu_usage+Math.random()*20):e.cpu_usage=q(e.cpu_usage+(Math.random()-.5)*10,0,100),e.memory_usage>x*.25?e.status=e.name==="kernel"?"running":"swapped":e.cpu_usage<5?e.status="sleeping":e.status="running"}),Math.random()<.3*b){const e=Array.from(a.values()),o=e[Math.floor(Math.random()*e.length)],m=["malloc","free","realloc","page_fault"],p=m[Math.floor(Math.random()*m.length)];d.push({id:`op-${Date.now()}-${Math.random()}`,type:p,address:1048576+Math.floor(Math.random()*268435456),size:1024+Math.floor(Math.random()*1024*1024),process_id:o.id,timestamp:Date.now(),latency:.1+Math.random()*10,success:Math.random()<(y==="oom"?.7:.95)})}if(B.current=d.slice(-50),S&&Math.random()<.05*b){const e=["minor","major","full","concurrent","incremental"];let o=e[Math.floor(Math.random()*e.length)];_==="mark_sweep"?o=Math.random()<.7?"major":"full":_==="generational"?o=Math.random()<.8?"minor":"major":_==="concurrent"&&(o="concurrent");const m=400+Math.random()*600,p=m*(.1+Math.random()*.4),N=m-p;l.push({id:`gc-${Date.now()}`,timestamp:Date.now(),type:o,collected_bytes:p*1024*1024,duration:o==="full"?50+Math.random()*100:5+Math.random()*20,pause_time:o==="concurrent"?1+Math.random()*3:10+Math.random()*40,heap_before:m*1024*1024,heap_after:N*1024*1024,generation:o==="minor"?0:o==="major"?1:2})}if(V.current=l.slice(-20),Math.random()<.1*b){if(C==="first_fit"){const e=t.filter(o=>o.status==="free");if(e.length>0&&Math.random()<.5){const o=e[0];o.status="allocated",o.type=Math.random()<.6?"heap":"data",o.owner=Array.from(a.values())[Math.floor(Math.random()*a.size)].name,o.allocated_time=Date.now()}}else if(C==="best_fit"){const e=t.filter(o=>o.status==="free").sort((o,m)=>o.size-m.size);if(e.length>0&&Math.random()<.5){const o=e[0];o.status="allocated",o.type="heap",o.owner=Array.from(a.values())[Math.floor(Math.random()*a.size)].name,o.allocated_time=Date.now()}}if(Math.random()<.3){const e=t.filter(o=>o.status==="allocated"&&o.type!=="kernel");if(e.length>0){const o=e[Math.floor(Math.random()*e.length)];o.status="free",o.owner="system"}}}c.forEach(e=>{e.age++,Math.random()<.1&&(e.accessed=!0,e.reference_bit=!0,e.age=0),e.accessed&&Math.random()<.3&&(e.dirty=!0),y==="high"&&e.age>100&&Math.random()<.05&&(e.present=!1,e.swapped=!0),e.swapped&&e.accessed&&Math.random()<.8&&(e.present=!0,e.swapped=!1,e.age=0)}),t.forEach(e=>{e.status==="allocated"&&(e.access_count++,e.fragmentation=Math.min(.5,e.fragmentation+(Math.random()-.5)*.01))})},A=(a,t)=>{switch(a.type){case"heap":return t.heap;case"stack":return t.stack;case"code":return t.code;case"data":return t.data;case"free":return t.free;case"kernel":return t.kernel;case"cache":return t.data;case"buffer":return t.stack;default:return t.text}},L=a=>{const t=v[M],c=80,l=40,d=10*a,i=5*a;s.strokeStyle=t.text+"40",s.lineWidth=1,s.strokeRect(d,i,c*a,l*a);const e=x*1024*1024;W.current.forEach(m=>{const p=m.start_address/e*c,N=Math.max(1,m.size/e*c),D=2,G=d+p*a,f=i+Math.floor(m.start_address/(e/l))*2*a;if(s.fillStyle=A(m,t),s.fillRect(G,f,N*a,D*a),m.fragmentation>.1){s.fillStyle=t.text+"60";const j=N*m.fragmentation;s.fillRect(G,f,j*a,D*a/2)}}),s.fillStyle=t.text,s.fillText("Memory Map",d,i-a),s.fillText("0x0",d,i+l*a+a),s.fillText(`${x}MB`,d+c*a-a*5,i+l*a+a)},T=(a,t)=>{const c=a.x*t,l=a.y*t,d=v[M];let i="🟦";a.status==="swapped"?i="💤":a.status==="sleeping"?i="😴":a.name==="kernel"?i="👑":a.name==="chrome"?i="🌐":a.name==="node"?i="⚙️":a.name==="postgres"&&(i="🗄️"),s.fillStyle=a.status==="running"?d.heap:a.status==="swapped"?d.data:d.text,s.fillText(i,c,l),s.fillStyle=d.text,s.fillText(a.name,c+t,l),s.fillText(`PID:${a.pid}`,c+t*8,l),s.fillText(`${a.memory_usage.toFixed(0)}MB`,c,l+t),s.fillText(`V:${a.virtual_size.toFixed(0)}MB`,c+t*6,l+t),s.fillText(`R:${a.resident_size.toFixed(0)}MB`,c+t*12,l+t),s.fillStyle=d.heap,s.fillText(`H:${a.heap_size.toFixed(0)}MB`,c,l+t*2),s.fillStyle=d.stack,s.fillText(`S:${a.stack_size.toFixed(0)}MB`,c+t*6,l+t*2),s.fillStyle=d.text,s.fillText(`PF:${a.page_faults}`,c+t*12,l+t*2);const e=10,o=a.memory_usage/(x*.3),m=Math.floor(o*e);s.fillStyle=d.text+"40",s.fillText("█".repeat(e),c,l+t*3),m>0&&(s.fillStyle=o>.8?d.kernel:o>.6?d.data:d.heap,s.fillText("█".repeat(Math.min(m,e)),c,l+t*3))},X=a=>{if(!S)return;const t=v[M],c=V.current;s.fillStyle=t.text,s.fillText("Garbage Collection Events:",10,n.height-a*12),c.slice(-5).forEach((l,d)=>{const i=n.height-a*(11-d),e=(Date.now()-l.timestamp)/1e3;let o=t.heap;l.type==="major"?o=t.data:l.type==="full"?o=t.kernel:l.type==="concurrent"&&(o=t.stack),s.fillStyle=o;const m=l.type==="minor"?"🧹":l.type==="major"?"🗑️":l.type==="full"?"🧽":"⚡";s.fillText(m,10,i),s.fillStyle=t.text,s.fillText(`${l.type.toUpperCase()}`,10+a*2,i),s.fillText(`${(l.collected_bytes/1024/1024).toFixed(0)}MB`,10+a*8,i),s.fillText(`${l.duration.toFixed(0)}ms`,10+a*13,i),s.fillText(`${e.toFixed(0)}s ago`,10+a*18,i)})},h=a=>{const t=v[M],c=B.current;s.fillStyle=t.text,s.fillText("Recent Memory Operations:",n.width-a*25,n.height-a*8),c.slice(-5).forEach((l,d)=>{const i=n.width-a*25,e=n.height-a*(7-d);let o=t.text;l.type==="malloc"?o=t.heap:l.type==="free"?o=t.free:l.type==="realloc"?o=t.data:l.type==="page_fault"&&(o=t.kernel),s.fillStyle=o;const m=l.type==="malloc"?"➕":l.type==="free"?"➖":l.type==="realloc"?"🔄":"⚠️";s.fillText(m,i,e),s.fillStyle=l.success?t.text:t.kernel,s.fillText(l.type.toUpperCase(),i+a*2,e),s.fillText(`${(l.size/1024).toFixed(0)}KB`,i+a*8,e),s.fillText(`${l.latency.toFixed(1)}ms`,i+a*13,e)})},F=a=>{if(!H)return;const t=v[M],c=Array.from(P.current.values()).slice(0,100),l=60*a,d=5*a;s.fillStyle=t.text,s.fillText("Virtual Memory Pages (first 100):",l,d-a),c.forEach((i,e)=>{const o=l+e%20*a,m=d+Math.floor(e/20)*a;let p=t.free;i.present?i.dirty?p=t.data:i.accessed?p=t.heap:p=t.stack:p=t.kernel,s.fillStyle=p,s.fillText(i.present?"█":i.swapped?"░":"▓",o,m)}),s.fillStyle=t.text,s.fillText("Legend:",l,d+a*6),s.fillStyle=t.heap,s.fillText("█ Accessed",l,d+a*7),s.fillStyle=t.data,s.fillText("█ Dirty",l+a*10,d+a*7),s.fillStyle=t.kernel,s.fillText("█ Swapped",l,d+a*8),s.fillStyle=t.free,s.fillText("▓ Free",l+a*10,d+a*8)},g=()=>{if(!w)return;const a=v[M],t=8;s.fillStyle=a.bg,s.fillRect(0,0,n.width,n.height),s.font='8px "Courier New", monospace',s.textBaseline="top",Math.random()<.1*b&&O(),E==="allocation"&&L(t),U&&$.current.forEach(f=>{T(f,t)}),X(t),h(t),F(t);const c=Array.from($.current.values()),l=c.reduce((f,j)=>f+j.memory_usage,0),d=c.reduce((f,j)=>f+j.virtual_size,0),i=c.reduce((f,j)=>f+j.page_faults,0),e=c.filter(f=>f.status==="swapped").length,o=x-l,m=l/x*100,p=Array.from(P.current.values()),N=p.filter(f=>f.present).length,D=p.filter(f=>f.dirty).length,G=p.filter(f=>f.swapped).length;s.fillStyle=a.text,s.fillText(`Memory Allocation System - ${R.toUpperCase()} | Strategy: ${C} | GC: ${_}`,10,n.height-140),s.fillText(`Physical: ${l.toFixed(0)}MB/${x}MB (${m.toFixed(1)}%) | Virtual: ${d.toFixed(0)}MB`,10,n.height-125),s.fillText(`Processes: ${c.length} (${e} swapped) | Page Faults: ${i} | Pressure: ${y}`,10,n.height-110),s.fillText(`Pages: ${N}/${p.length} resident | ${D} dirty | ${G} swapped`,10,n.height-95),s.fillText(`Free Memory: ${o.toFixed(0)}MB | Display: ${E} | Operations: ${B.current.length}`,10,n.height-80),I.current=requestAnimationFrame(g)};return k(),window.addEventListener("resize",k),w&&g(),()=>{window.removeEventListener("resize",k),I.current&&cancelAnimationFrame(I.current)}},[w,b,E,R,C,M,U,S,H,_,y,x]),r.jsxs("div",{className:"flex flex-col h-screen bg-black",children:[r.jsxs("div",{className:"flex-shrink-0 bg-gray-900 p-4 border-b border-gray-700",children:[r.jsx("h1",{className:"text-2xl font-bold text-purple-400 mb-4",children:"🧠 ASCII Memory Allocation Monitor"}),r.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4 text-sm mb-4",children:[r.jsxs("div",{className:"flex flex-col",children:[r.jsx("label",{className:"text-purple-300 mb-2",children:"Animation"}),r.jsx("button",{onClick:()=>K(!w),className:`px-3 py-2 rounded font-medium transition-colors ${w?"bg-red-600 hover:bg-red-700 text-white":"bg-green-600 hover:bg-green-700 text-white"}`,children:w?"Pause":"Play"})]}),r.jsxs("div",{className:"flex flex-col",children:[r.jsxs("label",{className:"text-purple-300 mb-2",children:["Speed: ",b.toFixed(1),"x"]}),r.jsx("input",{type:"range",min:"0.1",max:"3",step:"0.1",value:b,onChange:n=>J(Number.parseFloat(n.target.value)),className:"w-full"})]}),r.jsxs("div",{className:"flex flex-col",children:[r.jsx("label",{className:"text-purple-300 mb-2",children:"Memory System"}),r.jsxs("select",{value:R,onChange:n=>Z(n.target.value),className:"px-2 py-1 bg-gray-800 text-purple-300 rounded border border-gray-600",children:[r.jsx("option",{value:"virtual",children:"Virtual Memory"}),r.jsx("option",{value:"physical",children:"Physical Memory"}),r.jsx("option",{value:"paged",children:"Paged Memory"}),r.jsx("option",{value:"segmented",children:"Segmented Memory"})]})]}),r.jsxs("div",{className:"flex flex-col",children:[r.jsx("label",{className:"text-purple-300 mb-2",children:"Display Mode"}),r.jsxs("select",{value:E,onChange:n=>Q(n.target.value),className:"px-2 py-1 bg-gray-800 text-purple-300 rounded border border-gray-600",children:[r.jsx("option",{value:"allocation",children:"Memory Map"}),r.jsx("option",{value:"processes",children:"Process View"}),r.jsx("option",{value:"pages",children:"Page Table"}),r.jsx("option",{value:"gc",children:"GC Analysis"})]})]}),r.jsxs("div",{className:"flex flex-col",children:[r.jsx("label",{className:"text-purple-300 mb-2",children:"Allocation Strategy"}),r.jsxs("select",{value:C,onChange:n=>z(n.target.value),className:"px-2 py-1 bg-gray-800 text-purple-300 rounded border border-gray-600",children:[r.jsx("option",{value:"first_fit",children:"First Fit"}),r.jsx("option",{value:"best_fit",children:"Best Fit"}),r.jsx("option",{value:"worst_fit",children:"Worst Fit"}),r.jsx("option",{value:"next_fit",children:"Next Fit"})]})]}),r.jsxs("div",{className:"flex flex-col",children:[r.jsx("label",{className:"text-purple-300 mb-2",children:"GC Strategy"}),r.jsxs("select",{value:_,onChange:n=>re(n.target.value),className:"px-2 py-1 bg-gray-800 text-purple-300 rounded border border-gray-600",children:[r.jsx("option",{value:"generational",children:"Generational"}),r.jsx("option",{value:"mark_sweep",children:"Mark & Sweep"}),r.jsx("option",{value:"concurrent",children:"Concurrent"}),r.jsx("option",{value:"incremental",children:"Incremental"})]})]}),r.jsxs("div",{className:"flex flex-col",children:[r.jsx("label",{className:"text-purple-300 mb-2",children:"Memory Pressure"}),r.jsxs("select",{value:y,onChange:n=>le(n.target.value),className:"px-2 py-1 bg-gray-800 text-purple-300 rounded border border-gray-600",children:[r.jsx("option",{value:"low",children:"Low"}),r.jsx("option",{value:"normal",children:"Normal"}),r.jsx("option",{value:"high",children:"High"}),r.jsx("option",{value:"oom",children:"Out of Memory"})]})]}),r.jsxs("div",{className:"flex flex-col",children:[r.jsx("label",{className:"text-purple-300 mb-2",children:"Color Scheme"}),r.jsxs("select",{value:M,onChange:n=>ee(n.target.value),className:"px-2 py-1 bg-gray-800 text-purple-300 rounded border border-gray-600",children:[r.jsx("option",{value:"memory",children:"Memory Map"}),r.jsx("option",{value:"address_space",children:"Address Space"}),r.jsx("option",{value:"allocation",children:"Allocation"}),r.jsx("option",{value:"virtual",children:"Virtual Memory"}),r.jsx("option",{value:"gc",children:"Garbage Collection"})]})]})]}),r.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm mb-4",children:[r.jsxs("div",{className:"flex flex-col",children:[r.jsxs("label",{className:"text-purple-300 mb-2",children:["Total Memory: ",x,"MB"]}),r.jsx("input",{type:"range",min:"1024",max:"32768",step:"1024",value:x,onChange:n=>oe(Number.parseInt(n.target.value)),className:"w-full"})]}),r.jsxs("label",{className:"flex items-center text-purple-300",children:[r.jsx("input",{type:"checkbox",checked:U,onChange:n=>te(n.target.checked),className:"mr-2"}),"Show Processes"]}),r.jsxs("label",{className:"flex items-center text-purple-300",children:[r.jsx("input",{type:"checkbox",checked:S,onChange:n=>ae(n.target.checked),className:"mr-2"}),"Show Garbage Collection"]}),r.jsxs("label",{className:"flex items-center text-purple-300",children:[r.jsx("input",{type:"checkbox",checked:H,onChange:n=>se(n.target.checked),className:"mr-2"}),"Show Page Table"]})]}),r.jsxs("div",{className:"mt-4 text-purple-400 text-sm",children:[r.jsxs("p",{children:["🧠 ",r.jsx("strong",{children:"Advanced memory allocation system"})," with virtual memory, garbage collection, and page management!"]}),r.jsxs("p",{children:["📊 ",r.jsx("strong",{children:"Multiple allocation strategies"})," - First Fit, Best Fit, Worst Fit with fragmentation analysis!"]}),r.jsxs("p",{children:["🔄 ",r.jsx("strong",{children:"Garbage collection monitoring"})," with generational, mark-sweep, and concurrent GC strategies!"]}),r.jsx("p",{children:"Monitor heap, stack, code, data segments with real-time memory operations and page fault analysis"})]})]}),r.jsx("div",{className:"flex-1 relative",children:r.jsx("canvas",{ref:Y,className:"absolute inset-0 w-full h-full",style:{background:v[M].bg}})})]})};export{ce as component};

import{r as c,j as l}from"./index-BqTI3VMm.js";const A=function(){const T=c.useRef(null),m=c.useRef(),[y,g]=c.useState(!1),p=c.useRef(!1),o=c.useRef([{id:"GPU-0",compute:0,memory:0,temperature:25,power:50,utilization:0,status:"idle"},{id:"GPU-1",compute:0,memory:0,temperature:25,power:50,utilization:0,status:"idle"},{id:"GPU-2",compute:0,memory:0,temperature:25,power:50,utilization:0,status:"idle"},{id:"GPU-3",compute:0,memory:0,temperature:25,power:50,utilization:0,status:"idle"}]),a=c.useRef([]),S=c.useRef(1),h=c.useRef({total:0,running:0,queued:0,completed:0,failed:0}),x=c.useRef(0);c.useEffect(()=>{const e=T.current;if(!e)return;const t=e.getContext("2d");if(!t)return;e.width=1e3,e.height=750,t.font="11px monospace";const i=r=>{p.current&&(r-x.current>1e3+Math.random()*2e3&&(M(),x.current=r),$(),w(),U(),b(),P(t),m.current=requestAnimationFrame(i))};return p.current&&(m.current=requestAnimationFrame(i)),()=>{m.current&&cancelAnimationFrame(m.current)}},[y]);const M=()=>{const e=["training","inference","rendering","compute"],t=["low","medium","high","critical"],i=e[Math.floor(Math.random()*e.length)],r=t[Math.floor(Math.random()*t.length)];let n=5e3,s=50;switch(i){case"training":n=8e3+Math.random()*12e3,s=60+Math.random()*30;break;case"inference":n=1e3+Math.random()*3e3,s=20+Math.random()*40;break;case"rendering":n=3e3+Math.random()*7e3,s=40+Math.random()*50;break;case"compute":n=2e3+Math.random()*8e3,s=30+Math.random()*60;break}const d={id:`job-${S.current.toString().padStart(3,"0")}`,type:i,priority:r,progress:0,estimatedTime:n,memoryRequired:s,status:"queued"};a.current.push(d),S.current++},$=()=>{o.current.forEach(e=>{const t=a.current.find(i=>i.gpuId===e.id&&i.status==="running");t?(e.status="busy",e.utilization=80+Math.random()*20,e.compute=70+Math.random()*30,e.memory=t.memoryRequired+Math.random()*10,e.temperature=65+Math.random()*20,e.power=200+Math.random()*100,e.temperature>80&&(e.status="overheated",e.utilization=Math.max(0,e.utilization-10))):(e.status="idle",e.utilization=Math.max(0,e.utilization-5),e.compute=Math.max(0,e.compute-3),e.memory=Math.max(0,e.memory-2),e.temperature=Math.max(25,e.temperature-1),e.power=Math.max(50,e.power-5)),e.status==="idle"&&Math.random()<5e-4&&(e.status="offline",setTimeout(()=>{o.current.find(i=>i.id===e.id)&&(e.status="idle")},5e3))})},w=()=>{const e=a.current.filter(i=>i.status==="queued"),t=o.current.filter(i=>i.status==="idle");e.sort((i,r)=>{const n={critical:4,high:3,medium:2,low:1};return n[r.priority]-n[i.priority]}),e.forEach(i=>{const r=t.find(n=>n.memory+i.memoryRequired<95&&n.status==="idle");r&&(i.gpuId=r.id,i.status="running",r.status="busy",t.splice(t.indexOf(r),1))})},U=()=>{a.current.forEach(t=>{if(t.status==="running"){t.progress+=100/(t.estimatedTime/16.67);const i=o.current.find(r=>r.id===t.gpuId);(i==null?void 0:i.status)==="overheated"&&(t.progress-=t.progress*.1),t.progress>=100&&(t.status="completed",t.progress=100,i&&(i.status="idle")),Math.random()<1e-4&&(t.status="failed",i&&(i.status="idle"))}});const e=Date.now();a.current=a.current.filter(t=>t.status==="completed"||t.status==="failed"?(e-t.completionTime||0)<1e4:!0),a.current.forEach(t=>{(t.status==="completed"||t.status==="failed")&&!t.completionTime&&(t.completionTime=e)})},b=()=>{const e=h.current;e.total=a.current.length,e.running=a.current.filter(t=>t.status==="running").length,e.queued=a.current.filter(t=>t.status==="queued").length,e.completed=a.current.filter(t=>t.status==="completed").length,e.failed=a.current.filter(t=>t.status==="failed").length},P=(e,t)=>{e.fillStyle="#000",e.fillRect(0,0,1e3,750),e.fillStyle="#00ff00",e.fillText("ASCII GPU Workload Scheduler - High-Performance Computing Cluster",20,25),C(e),E(e),z(e),G(e)},C=e=>{e.fillStyle="#ffffff",e.fillText("╔═══ GPU CLUSTER STATUS ═══════════════════════════════════════════════╗",20,60),o.current.forEach((t,i)=>{const r=25+i%2*450,n=80+Math.floor(i/2)*120,s=t.status==="idle"?"#00ff00":t.status==="busy"?"#ffff00":t.status==="overheated"?"#ff8800":"#ff0000";e.fillStyle=s,e.fillText(`┌─ ${t.id} ────────────────────┐`,r,n),e.fillText(`│ Status: ${t.status.padEnd(12)} │`,r,n+15),e.fillStyle="#ffffff",e.fillText(`│ Util: ${t.utilization.toFixed(0).padStart(3)}%            │`,r,n+30),e.fillText(`│ Compute: ${t.compute.toFixed(0).padStart(3)}%         │`,r,n+45),e.fillText(`│ Memory: ${t.memory.toFixed(0).padStart(3)}%          │`,r,n+60),e.fillText(`│ Temp: ${t.temperature.toFixed(0).padStart(3)}°C          │`,r,n+75),e.fillText(`│ Power: ${t.power.toFixed(0).padStart(3)}W           │`,r,n+90),e.fillStyle=s,e.fillText("└─────────────────────────────┘",r,n+105);const d="█".repeat(Math.floor(t.utilization/5))+"░".repeat(20-Math.floor(t.utilization/5));e.fillStyle=t.utilization>90?"#ff0000":t.utilization>70?"#ffff00":"#00ff00",e.fillText(`[${d}]`,r+250,n+30);const f=a.current.find(u=>u.gpuId===t.id&&u.status==="running");f&&(e.fillStyle="#00aaff",e.fillText(`Running: ${f.id} (${f.type})`,r+250,n+50),e.fillText(`Progress: ${f.progress.toFixed(0)}%`,r+250,n+70))}),e.fillStyle="#ffffff",e.fillText("╚══════════════════════════════════════════════════════════════════════╝",20,320)},E=e=>{e.fillStyle="#ffffff",e.fillText("╔═══ JOB QUEUE ═════════════════════════════════════════════════════════╗",20,350);const t=a.current.filter(r=>r.status==="queued").slice(0,8),i=a.current.filter(r=>r.status==="running").slice(0,4);e.fillStyle="#ffff00",e.fillText("Queued Jobs:",25,375),t.forEach((r,n)=>{const s=395+n*15,d=r.priority==="critical"?"#ff0000":r.priority==="high"?"#ff8800":r.priority==="medium"?"#ffff00":"#00ff00";e.fillStyle=d,e.fillText(`${r.id} | ${r.type.padEnd(9)} | ${r.priority.padEnd(8)} | ${r.memoryRequired.toFixed(0)}% mem`,25,s)}),e.fillStyle="#00ff00",e.fillText("Running Jobs:",400,375),i.forEach((r,n)=>{const s=395+n*15;e.fillStyle="#00aaff",e.fillText(`${r.id} | ${r.gpuId} | ${r.progress.toFixed(0)}% complete`,400,s)}),e.fillStyle="#ffffff",e.fillText("╚══════════════════════════════════════════════════════════════════════╝",20,540)},z=e=>{e.fillStyle="#ffffff",e.fillText("╔═══ SCHEDULER STATISTICS ═════════════════════════════════════════════╗",20,570);const t=h.current,i=o.current.filter(u=>u.status==="busy").length,r=o.current.filter(u=>u.status==="idle").length,n=o.current.filter(u=>u.status==="overheated"||u.status==="offline").length;e.fillStyle="#ffffff",e.fillText(`Total Jobs: ${t.total.toString().padStart(3)}      Running: ${t.running.toString().padStart(2)}      Queued: ${t.queued.toString().padStart(2)}`,25,595),e.fillText(`Completed: ${t.completed.toString().padStart(3)}       Failed: ${t.failed.toString().padStart(2)}`,25,615),e.fillText(`Active GPUs: ${i}/4     Idle GPUs: ${r}/4     Problem GPUs: ${n}/4`,25,640);const f=o.current.reduce((u,v)=>u+v.utilization,0)/o.current.length/100*100;e.fillStyle=f>80?"#00ff00":f>60?"#ffff00":"#ff8800",e.fillText(`Cluster Efficiency: ${f.toFixed(1)}%`,25,665),e.fillStyle="#ffffff",e.fillText("╚══════════════════════════════════════════════════════════════════════╝",20,685)},G=e=>{e.fillStyle="#ffffff",e.fillText("╔═══ PERFORMANCE METRICS ══════════════════════════════════════════════╗",500,570);const t=o.current.reduce((d,f)=>d+f.temperature,0)/o.current.length,i=o.current.reduce((d,f)=>d+f.power,0),r=h.current.completed/(h.current.completed+h.current.failed||1)*100;e.fillText(`Average Temperature: ${t.toFixed(1)}°C`,505,595),e.fillText(`Total Power Consumption: ${i.toFixed(0)}W`,505,615),e.fillText(`Job Success Rate: ${r.toFixed(1)}%`,505,635);const n=t>75?"#ff0000":t>65?"#ffff00":"#00ff00";e.fillStyle=n;const s=t>75?"HOT":t>65?"WARM":"COOL";e.fillText(`Thermal Status: ${s}`,505,655),e.fillStyle="#ffffff",e.fillText("╚══════════════════════════════════════════════════════════════════════╝",500,685)},q=()=>{g(!0),p.current=!0},R=()=>{g(!1),p.current=!1,m.current&&cancelAnimationFrame(m.current)},F=()=>{R(),o.current.forEach(e=>{e.compute=0,e.memory=0,e.temperature=25,e.power=50,e.utilization=0,e.status="idle"}),a.current=[],S.current=1,h.current={total:0,running:0,queued:0,completed:0,failed:0}};return l.jsxs("div",{className:"p-6 max-w-6xl mx-auto",children:[l.jsx("h1",{className:"text-3xl font-bold mb-4",children:"ASCII GPU Workload Scheduler"}),l.jsx("p",{className:"text-gray-600 mb-6",children:"High-performance computing cluster scheduler managing GPU workloads with intelligent job queuing, resource allocation, and thermal management."}),l.jsxs("div",{className:"mb-4 space-x-2",children:[l.jsx("button",{onClick:q,disabled:y,className:"px-4 py-2 bg-green-500 text-white rounded disabled:bg-gray-400",children:"Start Scheduler"}),l.jsx("button",{onClick:R,disabled:!y,className:"px-4 py-2 bg-red-500 text-white rounded disabled:bg-gray-400",children:"Stop"}),l.jsx("button",{onClick:F,className:"px-4 py-2 bg-blue-500 text-white rounded",children:"Reset"})]}),l.jsx("canvas",{ref:T,style:{border:"1px solid #ccc",backgroundColor:"#000",maxWidth:"100%",height:"auto"}}),l.jsxs("div",{className:"mt-4 text-sm text-gray-600",children:[l.jsx("p",{children:l.jsx("strong",{children:"Features:"})}),l.jsxs("ul",{className:"list-disc list-inside",children:[l.jsx("li",{children:"Priority-based job scheduling with different workload types"}),l.jsx("li",{children:"Real-time GPU monitoring (utilization, temperature, power)"}),l.jsx("li",{children:"Intelligent resource allocation based on memory requirements"}),l.jsx("li",{children:"Thermal management with performance throttling"}),l.jsx("li",{children:"Cluster efficiency metrics and performance analytics"})]})]})]})};export{A as component};

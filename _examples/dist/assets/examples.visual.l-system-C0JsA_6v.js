import{r as d,j as e,L as U,h as W,t as V,z as p}from"./index-BqTI3VMm.js";const Y=function(){const b=d.useRef(null),[m,L]=d.useState("dragon"),[h,M]=d.useState(10),[u,T]=d.useState(5),[K,O]=d.useState(!1),[N,$]=d.useState(50),[G,w]=d.useState(!1),f=d.useRef(),v=d.useRef(0),S={dragon:{name:"Dragon Curve",axiom:"F",rules:[{symbol:"F",replacement:"F+S"},{symbol:"S",replacement:"F-S"}],angle:90,description:"Creates a fractal dragon curve with each iteration"},sierpinski:{name:"Sierpinski Triangle",axiom:"F-G-G",rules:[{symbol:"F",replacement:"F-G+F+G-F"},{symbol:"G",replacement:"GG"}],angle:120,description:"Generates the famous Sierpinski triangle fractal"},kochSnowflake:{name:"Koch Snowflake",axiom:"F++F++F",rules:[{symbol:"F",replacement:"F-F++F-F"}],angle:60,description:"Creates the Koch snowflake with triangular segments"},plant:{name:"Plant Growth",axiom:"X",rules:[{symbol:"X",replacement:"F+[[X]-X]-F[-FX]+X"},{symbol:"F",replacement:"FF"}],angle:25,description:"Simulates plant growth with branching patterns"},tree:{name:"Binary Tree",axiom:"F",rules:[{symbol:"F",replacement:"F[+F]F[-F]F"}],angle:30,description:"Creates a binary tree structure with symmetric branching"},levy:{name:"L√©vy C Curve",axiom:"F",rules:[{symbol:"F",replacement:"+F--F+"}],angle:45,description:"Generates the L√©vy C curve fractal"}},R=(s,l)=>{let i=s.axiom;for(let n=0;n<l;n++){let c="";for(const r of i){const a=s.rules.find(o=>o.symbol===r);c+=a?a.replacement:r}i=c}return i},A=(s,l,i,n,c=!1,r)=>{const a=n.getContext("2d");if(!a)return;a.clearRect(0,0,n.width,n.height),a.lineCap="round",a.lineJoin="round";const o=[],t={x:n.width/2,y:n.height/2,angle:l.name==="Plant Growth"?90:0,color:W(120,70,50),lineWidth:1};l.name==="Koch Snowflake"?(t.x=n.width*.15,t.y=n.height*.7):l.name==="Sierpinski Triangle"?(t.x=n.width*.5,t.y=n.height*.85):l.name==="Dragon Curve"&&(t.x=n.width*.4,t.y=n.height*.5);let F=0;r||s.length;for(let j=0;j<s.length&&(!r||F<r);j++){const C=s[j];switch(a.strokeStyle=V(t.color),a.lineWidth=t.lineWidth,C){case"F":case"G":case"S":const g=t.x,I=t.y;t.x+=Math.cos(p(t.angle))*i,t.y+=Math.sin(p(t.angle))*i,a.beginPath(),a.moveTo(g,I),a.lineTo(t.x,t.y),a.stroke(),F++;break;case"f":t.x+=Math.cos(p(t.angle))*i,t.y+=Math.sin(p(t.angle))*i;break;case"+":t.angle+=l.angle;break;case"-":t.angle-=l.angle;break;case"[":o.push({...t,color:{...t.color}}),t.color.h=(t.color.h+20)%360,t.lineWidth*=.8;break;case"]":const x=o.pop();x&&(t.x=x.x,t.y=x.y,t.angle=x.angle,t.color=x.color,t.lineWidth=x.lineWidth);break}}},k=(s,l,i,n=!1)=>{const c=b.current;if(!c)return;const r=S[s];if(!r)return;const a=R(r,l);n?(v.current=0,w(!0),X(a,r,i)):(A(a,r,i,c),w(!1))},X=(s,l,i)=>{const n=b.current;if(!n)return;const c=()=>{const r=Math.max(1,Math.floor(N/10));v.current+=r,A(s,l,i,n,!0,v.current),v.current<s.length?f.current=requestAnimationFrame(c):w(!1)};c()},E=()=>{w(!1),f.current&&cancelAnimationFrame(f.current)},P=()=>{const s=b.current;if(!s)return;const l=S[m],i=R(l,h);let n=`<svg width="${s.width}" height="${s.height}" xmlns="http://www.w3.org/2000/svg">
`;n+=`<g stroke="green" stroke-width="1" fill="none">
`;const c=D(i,l,u,s);n+=c,n+=`</g>
</svg>`;const r=new Blob([n],{type:"image/svg+xml"}),a=URL.createObjectURL(r),o=document.createElement("a");o.href=a,o.download=`${m}-${h}iterations.svg`,o.click(),URL.revokeObjectURL(a)},D=(s,l,i,n)=>{const c=[],r={x:n.width/2,y:n.height/2,angle:l.name==="Plant Growth"?90:0,color:W(120,70,50),lineWidth:1};let a="",o="",t=!1;for(const F of s)switch(F){case"F":case"G":case"S":const j=r.x,C=r.y;r.x+=Math.cos(p(r.angle))*i,r.y+=Math.sin(p(r.angle))*i,t||(o=`M ${j.toFixed(2)} ${C.toFixed(2)} `,t=!0),o+=`L ${r.x.toFixed(2)} ${r.y.toFixed(2)} `;break;case"+":r.angle+=l.angle;break;case"-":r.angle-=l.angle;break;case"[":t&&(a+=`<path d="${o}" />
`,o="",t=!1),c.push({...r,color:{...r.color}});break;case"]":t&&(a+=`<path d="${o}" />
`,o="",t=!1);const g=c.pop();g&&(r.x=g.x,r.y=g.y,r.angle=g.angle,r.color=g.color,r.lineWidth=g.lineWidth);break}return t&&(a+=`<path d="${o}" />
`),a};d.useEffect(()=>{const s=b.current;s&&(s.width=800,s.height=600,k(m,h,u))},[m,h,u]),d.useEffect(()=>()=>{f.current&&cancelAnimationFrame(f.current)},[]);const y=S[m];return e.jsxs("div",{className:"container mx-auto px-4 py-8",children:[e.jsxs("div",{className:"mb-8",children:[e.jsx("h1",{className:"text-3xl font-bold mb-4",children:"L-System Fractal Generator"}),e.jsx("p",{className:"text-gray-600 mb-4",children:"Six mathematical fractals with turtle graphics, animated drawing, SVG export, and educational rule explanations."}),e.jsx("div",{className:"bg-purple-50 border border-purple-200 rounded-lg p-4",children:e.jsx("p",{className:"text-purple-800",children:"üåø Watch fractals grow using simple replacement rules and turtle graphics"})})]}),e.jsxs("div",{className:"mb-6",children:[e.jsxs("div",{className:"flex flex-wrap gap-4 mb-4",children:[e.jsx("button",{type:"button",onClick:()=>k(m,h,u,!0),disabled:G,className:"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50 transition-colors",children:"Animate Drawing"}),e.jsx("button",{type:"button",onClick:E,disabled:!G,className:"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 disabled:opacity-50 transition-colors",children:"Stop Animation"}),e.jsx("button",{type:"button",onClick:()=>k(m,h,u),className:"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors",children:"Draw Complete"}),e.jsx("button",{type:"button",onClick:P,className:"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 transition-colors",children:"Export SVG"})]}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"L-System Type"}),e.jsx("select",{value:m,onChange:s=>L(s.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500",children:Object.entries(S).map(([s,l])=>e.jsx("option",{value:s,children:l.name},s))})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:["Iterations: ",h]}),e.jsx("input",{type:"range",min:"1",max:"15",value:h,onChange:s=>M(Number(s.target.value)),className:"w-full"})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:["Step Length: ",u,"px"]}),e.jsx("input",{type:"range",min:"1",max:"20",value:u,onChange:s=>T(Number(s.target.value)),className:"w-full"})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:["Animation Speed: ",N]}),e.jsx("input",{type:"range",min:"10",max:"200",value:N,onChange:s=>$(Number(s.target.value)),className:"w-full"})]})]})]}),e.jsx("div",{className:"mb-6",children:e.jsx("canvas",{ref:b,className:"border border-gray-300 rounded-lg bg-black",style:{maxWidth:"100%",height:"auto"}})}),e.jsxs("div",{className:"grid md:grid-cols-2 gap-6 mb-6",children:[e.jsxs("div",{className:"bg-gray-50 border border-gray-200 rounded-lg p-4",children:[e.jsxs("h3",{className:"text-lg font-semibold mb-2 text-gray-800",children:["Current System: ",y.name]}),e.jsx("p",{className:"text-gray-600 mb-3",children:y.description}),e.jsxs("div",{className:"space-y-2 text-sm",children:[e.jsxs("div",{children:[e.jsx("strong",{children:"Axiom:"})," ",e.jsx("code",{className:"bg-gray-200 px-1 rounded",children:y.axiom})]}),e.jsxs("div",{children:[e.jsx("strong",{children:"Angle:"})," ",y.angle,"¬∞"]}),e.jsx("div",{children:e.jsx("strong",{children:"Rules:"})}),e.jsx("ul",{className:"ml-4 space-y-1",children:y.rules.map((s,l)=>e.jsxs("li",{children:[e.jsx("code",{className:"bg-gray-200 px-1 rounded",children:s.symbol})," ","‚Üí",e.jsx("code",{className:"bg-gray-200 px-1 rounded ml-1",children:s.replacement})]},l))})]})]}),e.jsxs("div",{className:"bg-green-50 border border-green-200 rounded-lg p-4",children:[e.jsx("h3",{className:"text-lg font-semibold mb-2 text-green-800",children:"Turtle Commands"}),e.jsxs("ul",{className:"text-green-700 space-y-1 text-sm",children:[e.jsxs("li",{children:["‚Ä¢ ",e.jsx("strong",{children:"F, G, S"}),": Move forward and draw"]}),e.jsxs("li",{children:["‚Ä¢ ",e.jsx("strong",{children:"f"}),": Move forward without drawing"]}),e.jsxs("li",{children:["‚Ä¢ ",e.jsx("strong",{children:"+"}),": Turn right by angle"]}),e.jsxs("li",{children:["‚Ä¢ ",e.jsx("strong",{children:"-"}),": Turn left by angle"]}),e.jsxs("li",{children:["‚Ä¢ ",e.jsx("strong",{children:"["}),": Save current state (push to stack)"]}),e.jsxs("li",{children:["‚Ä¢ ",e.jsx("strong",{children:"]"}),": Restore previous state (pop from stack)"]}),e.jsxs("li",{children:["‚Ä¢ ",e.jsx("strong",{children:"X"}),": Non-drawing placeholder symbol"]})]})]})]}),e.jsxs("div",{className:"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-2 text-blue-800",children:"How L-Systems Work"}),e.jsxs("ol",{className:"text-blue-700 space-y-1",children:[e.jsx("li",{children:"1. Start with an initial string (axiom)"}),e.jsx("li",{children:"2. Apply replacement rules simultaneously to all symbols"}),e.jsx("li",{children:"3. Repeat for the desired number of iterations"}),e.jsx("li",{children:"4. Interpret the final string as turtle graphics commands"}),e.jsx("li",{children:"5. The turtle draws the fractal pattern step by step"})]})]}),e.jsx("div",{className:"mt-6",children:e.jsx(U,{to:"/examples/visual",className:"inline-block px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors",children:"‚Üê Back to Examples"})})]})};export{Y as component};

import{r as a,j as i}from"./index-BqTI3VMm.js";const z=function(){const S=a.useRef(null),g=a.useRef(),[T,C]=a.useState(!1),p=a.useRef(!1),s=a.useRef([]),I=a.useRef(1),d=a.useRef([]),b=a.useRef(0),f=a.useRef(50),m=a.useRef(2),h=a.useRef(2),y=a.useRef(8);a.useEffect(()=>{M()},[]),a.useEffect(()=>{const t=S.current;if(!t)return;const n=t.getContext("2d");if(!n)return;t.width=900,t.height=700,n.font="12px monospace";const r=l=>{p.current&&(E(l),l-b.current>2e3&&(F(l),b.current=l),N(l),U(n,l),g.current=requestAnimationFrame(r))};return p.current&&(g.current=requestAnimationFrame(r)),()=>{g.current&&cancelAnimationFrame(g.current)}},[T]);const M=()=>{s.current=[];for(let t=0;t<h.current;t++)A(Date.now()-1e4)},A=t=>{const n={id:`i-${I.current.toString().padStart(3,"0")}`,x:200+s.current.length%6*100,y:150+Math.floor(s.current.length/6)*80,status:"starting",age:0,cpu:0,memory:0,startTime:t};s.current.push(n),I.current++,setTimeout(()=>{const r=s.current.find(l=>l.id===n.id);r&&(r.status="running")},3e3)},j=()=>{const t=s.current.filter(n=>n.status==="running");if(t.length>h.current){const n=t.reduce((r,l)=>r.age>l.age?r:l);n.status="terminating",setTimeout(()=>{s.current=s.current.filter(r=>r.id!==n.id)},2e3)}},E=t=>{const n=t/1e3%120,r=50+30*Math.sin(n/120*Math.PI*2),l=(Math.random()-.5)*20,u=Math.random()<.01?50:0;f.current=Math.max(0,Math.min(100,r+l+u))},F=t=>{const n=s.current.filter(o=>o.status==="running"),r=n.reduce((o,e)=>o+e.cpu,0)/n.length||0;let l=!1,u="up",x="";if(r>70&&n.length<y.current?(l=!0,u="up",x=`High CPU utilization (${r.toFixed(1)}%)`,m.current=Math.min(y.current,n.length+1)):r<30&&n.length>h.current&&(l=!0,u="down",x=`Low CPU utilization (${r.toFixed(1)}%)`,m.current=Math.max(h.current,n.length-1)),l){const o={type:u==="up"?"scale_up":"scale_down",timestamp:t,reason:x,targetCount:m.current};d.current.push(o),d.current.length>5&&d.current.shift(),u==="up"?A(t):j()}},N=t=>{s.current.forEach(n=>{if(n.age=(t-n.startTime)/1e3,n.status==="running"){const r=f.current/100;n.cpu=Math.min(95,r*80+Math.random()*20),n.memory=40+n.cpu*.5+Math.random()*10}else n.cpu=Math.max(0,n.cpu-2),n.memory=Math.max(0,n.memory-1)})},U=(t,n)=>{t.fillStyle="#000",t.fillRect(0,0,900,700),t.fillStyle="#00ff00",t.fillText("ASCII Auto-Scaling Infrastructure - Dynamic Resource Management",20,30),t.fillStyle="#ffffff",t.fillText("─ CURRENT TRAFFIC ─",20,70);const r="█".repeat(Math.floor(f.current/5))+"░".repeat(20-Math.floor(f.current/5));t.fillStyle=f.current>70?"#ff0000":f.current>40?"#ffff00":"#00ff00",t.fillText(`[${r}] ${f.current.toFixed(1)}%`,20,90);const l=s.current.filter(e=>e.status==="running").length,u=s.current.filter(e=>e.status==="starting").length,x=s.current.filter(e=>e.status==="terminating").length;t.fillStyle="#ffff00",t.fillText("─ AUTO-SCALER ─",450,70),t.fillStyle="#ffffff",t.fillText(`Target: ${m.current} instances`,450,90),t.fillText(`Running: ${l} | Starting: ${u} | Terminating: ${x}`,450,110),s.current.forEach(e=>{let c="#00ff00";e.status==="starting"&&(c="#ffff00"),e.status==="terminating"&&(c="#ff8800"),t.fillStyle=c,t.fillText("┌─────────────┐",e.x,e.y),t.fillText(`│ ${e.id}    │`,e.x,e.y+15),t.fillText(`│ ${e.status.padEnd(11)} │`,e.x,e.y+30),t.fillText(`│ CPU: ${e.cpu.toFixed(0)}%    │`,e.x,e.y+45),t.fillText(`│ MEM: ${e.memory.toFixed(0)}%    │`,e.x,e.y+60),t.fillText("└─────────────┘",e.x,e.y+75);const R=e.status==="running"?"●":e.status==="starting"?"◐":"○";t.fillText(R,e.x+120,e.y+30)}),t.fillStyle="#ffffff",t.fillText("─ SCALING EVENTS ─",20,400),d.current.slice(-5).forEach((e,c)=>{const R=e.type==="scale_up"?"#00ff00":"#ff8800";t.fillStyle=R;const P=((n-e.timestamp)/1e3).toFixed(0);t.fillText(`${e.type.toUpperCase()}: ${e.reason} (${P}s ago)`,20,420+c*20)});const o=s.current.filter(e=>e.status==="running").reduce((e,c)=>e+c.cpu,0)/l||0;t.fillStyle="#ffffff",t.fillText("─ CLUSTER METRICS ─",450,400),t.fillText(`Total Instances: ${s.current.length}`,450,420),t.fillText(`Average CPU: ${o.toFixed(1)}%`,450,440),t.fillText(`Scaling Events: ${d.current.length}`,450,460),t.fillStyle="#888888",t.fillText("─ CONFIGURATION ─",20,550),t.fillText(`Min Instances: ${h.current}`,20,570),t.fillText(`Max Instances: ${y.current}`,20,590),t.fillText("Scale Up: CPU > 70%",20,610),t.fillText("Scale Down: CPU < 30%",20,630),t.fillText("Check Interval: 2s",20,650),t.fillStyle="#888888",t.fillText("─ STATUS LEGEND ─",450,550),t.fillStyle="#00ff00",t.fillText("● Running",450,570),t.fillStyle="#ffff00",t.fillText("◐ Starting",450,590),t.fillStyle="#ff8800",t.fillText("○ Terminating",450,610)},v=()=>{C(!0),p.current=!0},$=()=>{C(!1),p.current=!1,g.current&&cancelAnimationFrame(g.current)},w=()=>{$(),M(),d.current=[],f.current=50,m.current=2};return i.jsxs("div",{className:"p-6 max-w-5xl mx-auto",children:[i.jsx("h1",{className:"text-3xl font-bold mb-4",children:"ASCII Auto-Scaling Infrastructure"}),i.jsx("p",{className:"text-gray-600 mb-6",children:"Real-time visualization of auto-scaling infrastructure that dynamically adjusts instance count based on CPU utilization and traffic patterns."}),i.jsxs("div",{className:"mb-4 space-x-2",children:[i.jsx("button",{onClick:v,disabled:T,className:"px-4 py-2 bg-green-500 text-white rounded disabled:bg-gray-400",children:"Start Auto-Scaler"}),i.jsx("button",{onClick:$,disabled:!T,className:"px-4 py-2 bg-red-500 text-white rounded disabled:bg-gray-400",children:"Stop"}),i.jsx("button",{onClick:w,className:"px-4 py-2 bg-blue-500 text-white rounded",children:"Reset"})]}),i.jsx("canvas",{ref:S,style:{border:"1px solid #ccc",backgroundColor:"#000",maxWidth:"100%",height:"auto"}}),i.jsxs("div",{className:"mt-4 text-sm text-gray-600",children:[i.jsx("p",{children:i.jsx("strong",{children:"Features:"})}),i.jsxs("ul",{className:"list-disc list-inside",children:[i.jsx("li",{children:"Dynamic scaling based on CPU utilization thresholds"}),i.jsx("li",{children:"Realistic traffic simulation with natural fluctuations"}),i.jsx("li",{children:"Instance lifecycle management (starting, running, terminating)"}),i.jsx("li",{children:"Real-time metrics and scaling event logging"}),i.jsx("li",{children:"Configurable min/max instance limits"})]})]})]})};export{z as component};

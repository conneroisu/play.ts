var s=Math.PI,V=Math.PI*2,f=Math.PI/2,z=Math.PI/4,I=V,l=Math.E,N=(1+Math.sqrt(5))/2,u=(t,e,r)=>{if(e>r)[e,r]=[r,e];return Math.min(Math.max(t,e),r)},o=(t,e,r)=>{if(isNaN(t)||isNaN(e)||isNaN(r))return NaN;if(r===0)return t;if(r===1)return e;if(t===1/0&&e===-1/0)return NaN;if(t===-1/0&&e===1/0)return NaN;if(t===1/0)return 1/0;if(e===1/0)return 1/0;if(t===-1/0)return-1/0;if(e===-1/0)return-1/0;return t+(e-t)*r},g=(t,e,r,n,c)=>{if(r===e)return 1/0;return n+(t-e)*(c-n)/(r-e)},d=(t,e,r)=>{if(r===e){if(t===e)return NaN;return 1/0}return(t-e)/(r-e)},q=(t,e,r)=>{let n=u((r-t)/(e-t),0,1);return n*n*(3-2*n)},P=(t,e,r)=>{let n=u((r-t)/(e-t),0,1);return n*n*n*(n*(n*6-15)+10)},A=(t)=>{return t*180/s},L=(t)=>{return t*s/180},D=(t)=>{return t>0?1:t<0?-1:0},S=(t)=>{return t-Math.floor(t)},F=(t,e,r)=>{let n=r-e;return n===0?e:e+((t-e)%n+n)%n},x=(t,e)=>({x:t,y:e}),T=(t,e)=>({x:t.x+e.x,y:t.y+e.y}),w=(t,e)=>({x:t.x-e.x,y:t.y-e.y}),E=(t,e)=>({x:t.x*e===-0?0:t.x*e,y:t.y*e===-0?0:t.y*e}),R=(t,e)=>({x:t.x/e,y:t.y/e}),_=(t,e)=>{return t.x*e.x+t.y*e.y},H=(t)=>{return Math.sqrt(t.x*t.x+t.y*t.y)},U=(t)=>{return t.x*t.x+t.y*t.y},C=(t)=>{let e=t.x*t.x+t.y*t.y;if(e===0)return x(0,0);if(!isFinite(e))return x(NaN,NaN);let r=Math.sqrt(e);return{x:t.x/r,y:t.y/r}},O=(t,e)=>{let r=t.x-e.x,n=t.y-e.y;return Math.sqrt(r*r+n*n)},Q=(t)=>{return Math.atan2(t.y,t.x)},W=(t,e=1)=>({x:Math.cos(t)*e,y:Math.sin(t)*e}),j=(t,e,r)=>({x:o(t.x,e.x,r),y:o(t.y,e.y,r)}),k=(t,e)=>{let r=Math.cos(e),n=Math.sin(e);return{x:t.x*r-t.y*n,y:t.x*n+t.y*r}},b=(t,e,r)=>({x:t,y:e,z:r}),B=(t,e)=>({x:t.x+e.x,y:t.y+e.y,z:t.z+e.z}),M=(t,e)=>({x:t.x-e.x,y:t.y-e.y,z:t.z-e.z}),G=(t,e)=>({x:t.x*e,y:t.y*e,z:t.z*e}),a=(t,e)=>({x:t.x/e,y:t.y/e,z:t.z/e}),J=(t,e)=>{return t.x*e.x+t.y*e.y+t.z*e.z},K=(t,e)=>({x:t.y*e.z-t.z*e.y,y:t.z*e.x-t.x*e.z,z:t.x*e.y-t.y*e.x}),p=(t)=>{return Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)},X=(t)=>{return t.x*t.x+t.y*t.y+t.z*t.z},Y=(t)=>{let e=p(t);return e>0?a(t,e):b(0,0,0)},Z=(t,e)=>{return p(M(t,e))},$=(t,e,r)=>({x:o(t.x,e.x,r),y:o(t.y,e.y,r),z:o(t.z,e.z,r)}),v=()=>({elements:[1,0,0,0,1,0,0,0,1]}),tt=(t,e,r,n,c,m,y,i,h)=>({elements:[t,e,r,n,c,m,y,i,h]}),et=(t,e)=>{let r=t.elements,n=e.elements;return{elements:[r[0]*n[0]+r[1]*n[3]+r[2]*n[6],r[0]*n[1]+r[1]*n[4]+r[2]*n[7],r[0]*n[2]+r[1]*n[5]+r[2]*n[8],r[3]*n[0]+r[4]*n[3]+r[5]*n[6],r[3]*n[1]+r[4]*n[4]+r[5]*n[7],r[3]*n[2]+r[4]*n[5]+r[5]*n[8],r[6]*n[0]+r[7]*n[3]+r[8]*n[6],r[6]*n[1]+r[7]*n[4]+r[8]*n[7],r[6]*n[2]+r[7]*n[5]+r[8]*n[8]]}},rt=(t,e)=>{let r=t.elements;return{x:r[0]*e.x+r[1]*e.y+r[2],y:r[3]*e.x+r[4]*e.y+r[5]}},nt=Math.sin,ot=Math.cos,ct=Math.tan,xt=Math.asin,st=Math.acos,ut=Math.atan,pt=Math.atan2,mt=Math.sinh,yt=Math.cosh,it=Math.tanh,ht=Math.abs,Vt=Math.ceil,bt=Math.floor,Mt=Math.round,at=Math.trunc,ft=Math.sqrt,zt=Math.pow,It=Math.exp,lt=Math.log,Nt=Math.log2,gt=Math.log10,dt=Math.min,qt=Math.max,Pt=Math.random;export{F as wrap,M as vec3Sub,Y as vec3Normalize,G as vec3Mul,$ as vec3Lerp,X as vec3LengthSq,p as vec3Length,J as vec3Dot,a as vec3Div,Z as vec3Distance,K as vec3Cross,B as vec3Add,b as vec3,w as vec2Sub,k as vec2Rotate,C as vec2Normalize,E as vec2Mul,j as vec2Lerp,U as vec2LengthSq,H as vec2Length,W as vec2FromAngle,_ as vec2Dot,R as vec2Div,O as vec2Distance,Q as vec2Angle,T as vec2Add,x as vec2,at as trunc,it as tanh,ct as tan,ft as sqrt,q as smoothstep,P as smootherstep,mt as sinh,nt as sin,D as sign,Mt as round,Pt as random,L as radians,zt as pow,d as normalize,dt as min,qt as max,rt as mat3TransformVec2,et as mat3Multiply,v as mat3Identity,tt as mat3FromValues,g as map,Nt as log2,gt as log10,lt as log,o as lerp,S as fract,bt as floor,It as exp,A as degrees,yt as cosh,ot as cos,u as clamp,Vt as ceil,pt as atan2,ut as atan,xt as asin,st as acos,ht as abs,V as TWO_PI,I as TAU,z as QUARTER_PI,s as PI,N as PHI,f as HALF_PI,l as E};

var E=Math.PI,C=Math.PI*2,O=Math.PI/2,Q=Math.PI/4;var U=(1+Math.sqrt(5))/2;var y=(o)=>{return o*E/180};var I=(o,c)=>({x:o,y:c}),D=(o,c)=>({x:o.x+c.x,y:o.y+c.y});class p{axiom;rules;current;generation;constructor(o,c=[]){this.axiom=o,this.rules=new Map,this.current=o,this.generation=0;for(let r of c)this.rules.set(r.symbol,r.replacement)}addRule(o,c){this.rules.set(o,c)}iterate(o=1){for(let c=0;c<o;c++){let r="";for(let x of this.current)r+=this.rules.get(x)||x;this.current=r,this.generation++}return this.current}reset(){this.current=this.axiom,this.generation=0}getString(){return this.current}getGeneration(){return this.generation}}class F{position;angle;stack;path;penDown;constructor(o=0,c=0,r=0){this.position=I(o,c),this.angle=r,this.stack=[],this.path=[],this.penDown=!0}forward(o){let c=D(this.position,I(Math.cos(this.angle)*o,Math.sin(this.angle)*o));if(this.penDown)this.path.push({...this.position}),this.path.push({...c});this.position=c}turn(o){this.angle+=o}turnLeft(o){this.turn(-o)}turnRight(o){this.turn(o)}push(){this.stack.push({position:{...this.position},angle:this.angle})}pop(){let o=this.stack.pop();if(o)this.position=o.position,this.angle=o.angle}penUp(){this.penDown=!1}penDownFn(){this.penDown=!0}getPath(){return this.path}reset(o=0,c=0,r=0){this.position=I(o,c),this.angle=r,this.stack=[],this.path=[],this.penDown=!0}}var Z={koch:new p("F",[{symbol:"F",replacement:"F+F-F-F+F"}]),sierpinski:new p("F-G-G",[{symbol:"F",replacement:"F-G+F+G-F"},{symbol:"G",replacement:"GG"}]),dragon:new p("FX",[{symbol:"X",replacement:"X+YF+"},{symbol:"Y",replacement:"-FX-Y"}]),plant:new p("X",[{symbol:"X",replacement:"F+[[X]-X]-F[-FX]+X"},{symbol:"F",replacement:"FF"}]),tree:new p("F",[{symbol:"F",replacement:"F[+F]F[-F]F"}]),cantor:new p("F",[{symbol:"F",replacement:"F F"},{symbol:" ",replacement:"   "}])};class _{commands;defaultAngle;defaultDistance;constructor(o=60,c=10){this.commands=new Map,this.defaultAngle=y(o),this.defaultDistance=c,this.addCommand("F",(r)=>r.forward(this.defaultDistance)),this.addCommand("G",(r)=>r.forward(this.defaultDistance)),this.addCommand("+",(r)=>r.turnLeft(this.defaultAngle)),this.addCommand("-",(r)=>r.turnRight(this.defaultAngle)),this.addCommand("[",(r)=>r.push()),this.addCommand("]",(r)=>r.pop())}addCommand(o,c){this.commands.set(o,c)}interpret(o,c){for(let r of o){let x=this.commands.get(r);if(x)x(c)}return c.getPath()}draw(o,c,r){return o.iterate(c),this.interpret(o.getString(),r)}}var H=(o,c=100)=>{let r={real:0,imag:0},x=0;while(x<c){let n=r.real*r.real-r.imag*r.imag+o.real,t=2*r.real*r.imag+o.imag;if(r.real=n,r.imag=t,r.real*r.real+r.imag*r.imag>4)break;x++}return x},$=(o,c,r=-2.5,x=1.5,n=-2,t=2,u=100)=>{let V=[];for(let m=0;m<c;m++){V[m]=[];for(let e=0;e<o;e++){let b=r+e/o*(x-r),f=n+m/c*(t-n);V[m][e]=H({real:b,imag:f},u)}}return V},T=(o,c,r=100)=>{let x=0;while(x<r){let n=o.real*o.real-o.imag*o.imag+c.real,t=2*o.real*o.imag+c.imag;if(o.real=n,o.imag=t,o.real*o.real+o.imag*o.imag>4)break;x++}return x},j=(o,c,r,x=-2,n=2,t=-2,u=2,V=100)=>{let m=[];for(let e=0;e<c;e++){m[e]=[];for(let b=0;b<o;b++){let f=x+b/o*(n-x),N=t+e/c*(u-t);m[e][b]=T({real:f,imag:N},r,V)}}return m},K=(o,c,r)=>{if(o.length<3)throw new Error("Need at least 3 vertices");let x=[],n=r||{x:(o[0].x+o[1].x+o[2].x)/3,y:(o[0].y+o[1].y+o[2].y)/3};for(let t=0;t<c;t++){let u=o[Math.floor(Math.random()*o.length)];n={x:(n.x+u.x)/2,y:(n.y+u.y)/2},x.push({...n})}return x},A=(o)=>{let c=[],r=0,x=0;for(let n=0;n<o;n++){let t=Math.random(),u,V;if(t<0.01)u=0,V=0.16*x;else if(t<0.86)u=0.85*r+0.04*x,V=-0.04*r+0.85*x+1.6;else if(t<0.93)u=0.2*r-0.26*x,V=0.23*r+0.22*x+1.6;else u=-0.15*r+0.28*x,V=0.26*r+0.24*x+0.44;r=u,x=V,c.push({x:r,y:x})}return c},M=(o,c,r)=>{if(r===0)return[o,c];let x=c.x-o.x,n=c.y-o.y,t=o,u={x:o.x+x/3,y:o.y+n/3},V={x:o.x+2*x/3,y:o.y+2*n/3},m=c,e=(u.x+V.x)/2,b=(u.y+V.y)/2,f=Math.atan2(n,x)-Math.PI/2,N=Math.sqrt(x*x+n*n)/(2*Math.sqrt(3)),q={x:e+Math.cos(f)*N,y:b+Math.sin(f)*N};return[...M(t,u,r-1).slice(0,-1),...M(u,q,r-1).slice(0,-1),...M(q,V,r-1).slice(0,-1),...M(V,m,r-1)]},B=(o,c,r)=>{let x=[{x:o.x+c*Math.cos(0),y:o.y+c*Math.sin(0)},{x:o.x+c*Math.cos(2*Math.PI/3),y:o.y+c*Math.sin(2*Math.PI/3)},{x:o.x+c*Math.cos(4*Math.PI/3),y:o.y+c*Math.sin(4*Math.PI/3)}];return[...M(x[0],x[1],r).slice(0,-1),...M(x[1],x[2],r).slice(0,-1),...M(x[2],x[0],r)]},P=(o,c,r,x,n=Math.PI/6,t=0.7)=>{let u={x:o.x+Math.cos(c)*r,y:o.y+Math.sin(c)*r},V=[[o,u]];if(x>0){let m=P(u,c-n,r*t,x-1,n,t),e=P(u,c+n,r*t,x-1,n,t);V.push(...m,...e)}return V};export{K as sierpinskiTriangle,$ as mandelbrotSet,H as mandelbrot,Z as lSystems,M as kochSnowflake,j as juliaSet,T as julia,P as fractalTree,B as createKochSnowflake,A as barnsleyFern,F as Turtle,_ as LSystemInterpreter,p as LSystem};
